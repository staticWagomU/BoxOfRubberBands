---
import "../styles/base.css";
import "../styles/theme-toggle.css";

import { SITE_TITLE } from "../config";

type Props = {
	title?: string;
};

const { title } = Astro.props;

const today = new Date();
---

<!doctype html>
<html lang="ja">
	<head>
		<meta charset="UTF-8" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content="輪ゴムっていきなり切れるとびっくりするよね" />
		<link rel="icon" href="/favicon.ico" />
		<title>{title || SITE_TITLE}</title>
		<slot name="head" />
	</head>
	<body>
		<nav role="navigation" aria-label="メインナビゲーション">
			<h1><a href="/">{SITE_TITLE}</a></h1>
			<ul>
				<li>
					<a href="/blog">Blog</a>
				</li>
				<li>
					<button id="theme-toggle" aria-label="テーマを切り替える" aria-pressed="false">
						<span class="theme-icon icon-sun" aria-hidden="true"></span>
					</button>
				</li>
			</ul>
		</nav>
		<main role="main">
			<slot />
		</main>
		<footer role="contentinfo">
			<p class="copy">
				<a href="/info" class="copy">CC BY-NC-SA 4.0</a>
				<span>&nbsp;2021-PRESENT &copy;&nbsp; </span>
				<a href="/about">wagomu</a><span>. All rights reserved.</span>
			</p>
			<ul>
				<li>
					<a href="https://zenn.dev/wagomu" aria-label="Zennプロフィール"
						><span class="zenn-icon" style="--size: var(--font-size-m)" aria-hidden="true"
						></span></a
					>
				</li>
				<li>
					<a href="https://github.com/staticWagomU/BoxOfRubberBands" aria-label="GitHubリポジトリ"
						><span class="github-icon" style="--size: var(--font-size-m)" aria-hidden="true"></span>
					</a>
				</li>
				<li>
					<a href="https://codepen.io/statictowa" aria-label="CodePenプロフィール"
						><span class="codepen-icon" style="--size: var(--font-size-m)" aria-hidden="true"
						></span></a
					>
				</li>
				<li>
					<a href="/rss.xml" aria-label="RSSフィード"
						><span class="icon-rss" style="--size: var(--font-size-m)" aria-hidden="true"></span></a
					>
				</li>
			</ul>
		</footer>
	</body>
</html>

<style>
	.copy {
		font-size: var(--font-size-xs);
	}
</style>

<script is:inline>
	function toggleTheme() {
		const body = document.body;
		const themeIcon = document.querySelector(".theme-icon");

		if (document.startViewTransition) {
			document.startViewTransition(() => {
				body.classList.toggle("dark");
				const isDark = body.classList.contains("dark");
				localStorage.setItem("theme", isDark ? "dark" : "light");
				const toggleButton = document.getElementById("theme-toggle");
				if (toggleButton) {
					toggleButton.setAttribute("aria-pressed", isDark ? "true" : "false");
				}

				if (isDark) {
					themeIcon.classList.remove("icon-sun");
					themeIcon.classList.add("icon-moon");
				} else {
					themeIcon.classList.remove("icon-moon");
					themeIcon.classList.add("icon-sun");
				}
			});
		} else {
			body.classList.toggle("dark");
			const isDark = body.classList.contains("dark");
			localStorage.setItem("theme", isDark ? "dark" : "light");
			const toggleButton = document.getElementById("theme-toggle");
			if (toggleButton) {
				toggleButton.setAttribute("aria-pressed", isDark ? "true" : "false");
			}

			sun.classList.toggle("hidden");
			dark.classList.toggle("hidden");
		}
	}

	document.addEventListener("DOMContentLoaded", () => {
		const savedTheme = localStorage.getItem("theme");
		const themeIcon = document.querySelector(".theme-icon");

		if (savedTheme === "dark") {
			document.body.classList.add("dark");

			themeIcon.classList.remove("icon-sun");
			themeIcon.classList.add("icon-moon");
		} else {
			document.body.classList.remove("dark");

			themeIcon.classList.remove("icon-moon");
			themeIcon.classList.add("icon-sun");
		}

		const toggleButton = document.getElementById("theme-toggle");
		if (toggleButton) {
			toggleButton.addEventListener("click", toggleTheme);
		}
	});
</script>
