---
import Base from "./Base.astro";
import { SITE_TITLE } from "../config";

import "../styles/blog.css";
import "../styles/code-copy-button.css";
const { post } = Astro.props;
const { title, pubDate, tags } = post.data;
const formattedDate = pubDate.toLocaleDateString("ja-JP", {
	year: "numeric",
	month: "2-digit",
	day: "2-digit",
});
---

<Base title={`${title} - ${SITE_TITLE}`}>
	<div id="progress"></div>
	<article class="blog">
		<time datetime={pubDate}>{formattedDate}</time>
		<h1>{title}</h1>
		<slot />
		{
			tags && (
				<>
					<h3>Tags</h3>
					<ul class="tags">
						{tags.map((tag: string) => (
							<li>
								<a href={`/tags/${tag}`}>{tag}</a>
							</li>
						))}
					</ul>
				</>
			)
		}
	</article>
</Base>

<style>
	@keyframes grow-progress {
		from {
			width: 0;
		}
		to {
			width: 100%;
		}
	}

	#progress {
		/* スタイリング */
		position: fixed;
		z-index: 1000;
		width: 100%;
		height: 5px;
		left: 0;
		background: var(--accent2);

		animation: grow-progress linear;
		animation-timeline: scroll();
	}

	time {
		font-size: 0.8em;
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		list-style: none;
		padding: 0;
		a {
			padding: var(--space-xxs) var(--space-xs);
			border-radius: 1em;
		}
		a::before {
			content: "#";
		}
	}

	h3 {
		margin-bottom: 0;
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		document.querySelectorAll(".copy-button").forEach(button => {
			button.addEventListener("click", () => {
				const pre = button.closest("pre");
				const code = pre.querySelector("code").innerText;
				
				navigator.clipboard.writeText(code).then(() => {
					button.textContent = button.dataset.successText;
					button.classList.add("copied");
					
					setTimeout(() => {
						button.textContent = button.dataset.copyText;
						button.classList.remove("copied");
					}, parseInt(button.dataset.successDuration, 10) || 2000);
				}).catch(err => {
					console.error("Could not copy text: ", err);
				});
			});
		});
	});
</script>