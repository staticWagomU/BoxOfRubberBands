---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../../config';
import { getCollection } from 'astro:content';

const posts = (await getCollection('blog')).sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<!DOCTYPE html>
<html lang="ja">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
		<style>
			th {
				border-bottom: 1px solid;
				text-align: center;
			}
			table {
				width: max-content;
			}
			table {
				border-bottom: 1px solid
			}
			td:not(td:first-child) {
				padding-right: 1rem;
			}
			td:not(td:nth-child(2)) {
				text-align: center;
			}
		</style>
	</head>
	<body>
		<Header />
		<main>
			<table>
				<tr>
					<th style="width:25px;"></th>
					<th>NAME</th>
					<th>Publish</th>
					<th>Last modified</th>
					<th>Tags</th>
				</tr>
				<tr>
					<td>
						<img src ="/images/icon/back.png" alt="file icon" />
					</td>
					<td><a href="/">Parent Directory</a></td>
					<td></td>
					<td></td>
					<td></td>
				</tr>
				{
				posts
				.filter((post) => post.data.published)
				.map((post) => (
				<tr>
					<td>
						<img src ="/images/icon/link.png" alt="file icon" />
					</td>
					<td>
						<a href={`/blog/${post.slug}`}>{post.data.title}.html</a>
					</td>
					<td>
						<time>{
							post.data.pubDate.toLocaleDateString('ja-JP'
							, { year: "numeric", month: "2-digit", day: "2-digit"})
							.split("/")
							.join("-")
							}</time>
					</td>
					<td>
						<time>{
							post.data.updatedDate ?
							post.data.updatedDate.toLocaleDateString('ja-JP'
							, { year: "numeric", month: "2-digit", day: "2-digit"})
							.split("/")
							.join("-") : "-"
							}</time>
					</td>
					<td>-</td>
				</tr>
				))
				}
			</table>
		</main>
		<Footer />
	</body>
</html>
