---
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import Search from "../../components/Search.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../config";
import { getCollection } from "astro:content";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
let currentYear: number = 0;
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header />
    <Search />
    <main>
      {
        posts
          .filter((post) => post.data.published)
          .map((post, _) => {
            const postYear = post.data.pubDate.getFullYear();
            const isNewYear = currentYear !== postYear;
            currentYear = postYear;
            return (
              <>
                {isNewYear && (
                  <div class="header">
                    <div class="date">{postYear}</div>
                    <div class="content">
                      {posts.filter((p) => p.data.pubDate.getFullYear() === postYear).length} posts
                    </div>
                  </div>
                )}
                <a href={`/blog/${post.slug}`} class="bloglink">
                  <div class="timeline">
                    <div class="date">
                      {post.data.pubDate
                        .toLocaleDateString("ja-JP", {
                          month: "2-digit",
                          day: "2-digit",
                        })
                        .split("/")
                        .join("-")}
                    </div>
                    <div class="content">{post.data.title}</div>
                  </div>
                </a>
              </>
            );
          })
      }
    </main>
    <Footer />
  </body><style>
    .bloglink {
      text-decoration: none;
      color: var(--text);
      margin: 0;
      padding: 0;

      & + .bloglink {
        margin-top: 1rem;
      }

      .timeline {
        padding: 0.5rem;
        border-radius: 10px;
      }

      &:hover {
        & .timeline {
          background: color-mix(in srgb, var(--bg-light), #000 5%);
        }
        & .dashline::before {
          height: 2rem;
          border-radius: 0.5rem;
        }
      }
    }
    .header {
      display: flex;
      flex-direction: row;
      gap: 1rem;
      align-items: flex-end;
      vertical-align: bottom;
      border-bottom: 1px solid var(--bg-dark);
      margin-bottom: 1rem;
      .date {
        font-size: 2rem;
        line-height: 2rem;
        color: var(--bg-dark);
        font-weight: bold;
      }
    }
    .timeline {
      display: flex;
      gap: 1rem;
      flex-direction: row;
      .date {
        color: var(--bg-dark);
        order: 2;
        opacity: 0.8;
        font-size: 0.9rem;
      }
    }

    @media (width < 820px) {
      .timeline {
        display: flex;
        gap: 0rem;
        flex-direction: column-reverse;
      }
    }
  </style>
</html>
