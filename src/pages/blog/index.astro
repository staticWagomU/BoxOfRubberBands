---
import { getCollection } from "astro:content";
import Parser from "rss-parser";
import Base from "../../layouts/Base.astro";
const parser = new Parser();
const zenn_feed = await parser.parseURL("https://zenn.dev/wagomu/feed?all=1");
type Post = {
	slug: string;
	kind: "zenn" | "blog";
	data: {
		title: string;
		pubDate: Date;
	};
};
const zenn_posts: Post[] = zenn_feed.items.map((item) => ({
	slug: item.link || "",
	kind: "zenn",
	data: {
		title: item.title || "",
		pubDate: new Date(item.pubDate as string),
	},
}));

const blog_posts: Post[] = (
	await getCollection("blog", ({ data }) => {
		return data.published;
	})
).map((post: Post) => ({
	slug: post.slug,
	kind: "blog",
	data: {
		title: post.data.title,
		pubDate: new Date(post.data.pubDate),
	},
}));

const posts = [...zenn_posts, ...blog_posts].sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
---

<Base>
	{
		posts.map((post, _) => {
			return (
				<>
					{post.kind === "zenn" && (
						<a href={post.slug} class="bloglink">
							<div class="timeline">
								<div class="date">
									{post.data.pubDate
										.toLocaleDateString("ja-JP", {
											month: "2-digit",
											day: "2-digit",
										})
										.split("/")
										.join("-")}
								</div>
								<div class="content">{post.data.title}</div>
							</div>
						</a>
					)}
					{post.kind === "blog" && (
						<a href={`/blog/${post.slug}`} class="bloglink">
							<div class="timeline">
								<div class="date">
									{post.data.pubDate
										.toLocaleDateString("ja-JP", {
											month: "2-digit",
											day: "2-digit",
										})
										.split("/")
										.join("-")}
								</div>
								<div class="content">{post.data.title}</div>
							</div>
						</a>
					)}
				</>
			);
		})
	}
</Base>
